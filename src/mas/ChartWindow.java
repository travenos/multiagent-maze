package mas;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;

/**
 *
 * @author alexey
 */
public class ChartWindow extends java.awt.Frame {

    /**
     * Creates new form ChartWindow
     */
    
    private String xLabel;
    private String yLabel;
    public ChartWindow(boolean mode) {
        initComponents();
        setMode(mode);
        
    }

    public void setMode(boolean mode){
        if (mode){
            xLabel="Количество роботов";
            yLabel="Время";            
            this.setTitle("Зависимость времени исследования от количества роботов");
        }else{
            xLabel="Номер робота";
            yLabel="Путь";
            this.setTitle("Путь, пройденный каждым из роботов");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        canvas1.setPreferredSize(new java.awt.Dimension(600, 400));
        add(canvas1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        this.setVisible(false);
    }//GEN-LAST:event_exitForm

    
    public void draw(int minRobots, double[] data) {
        double max;
        max = data[0];
        for (int i = 1; i <= data.length - 1; i++) {
            if (data[i] > max) {
                max = data[i];
            }
        }
        double kV = (canvas1.getHeight() - 60) / max;
        double wD = (canvas1.getWidth() - 60) / data.length;
        Graphics2D g = (Graphics2D) canvas1.getGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, canvas1.getWidth(), canvas1.getHeight());
        g.setColor(Color.blue);
        Font font = new Font("Times New Roman", Font.PLAIN, 12);
        g.setFont(font);
        for (int i = 0; i <= data.length - 1; i++) {
            g.fillRect((int)(40 + wD * (i+0.1)), canvas1.getHeight()-(int)(data[i] * kV)-40, (int) (0.8 * wD), (int) (data[i] * kV));
            g.drawString(String.valueOf(data[i]), (int)(40 + wD * (i+0.5))-14, canvas1.getHeight()-(int)(data[i] * kV)-44);
            g.drawString(String.valueOf(minRobots+i), (int)(40 + wD * (i+0.5))-7, canvas1.getHeight()-26);
        }
        g.setColor(Color.black);
        g.drawString(xLabel, canvas1.getWidth()/2-43, canvas1.getHeight()-6);
        g.drawString(yLabel, 4, 20);

    }

    public void draw(double[] data){
        draw(0, data);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    // End of variables declaration//GEN-END:variables
}
